generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  teams         Team[]
}

model Team {
  id        String       @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  golfers   TeamGolfer[]
}

model Tournament {
  id           String       @id @default(cuid())
  name         String
  currentRound Int         @default(1)
  status       String      @default("upcoming") // upcoming, active, completed
  startDate    DateTime
  endDate      DateTime
  teamGolfers  TeamGolfer[]
  golfers      Golfer[]
}

model Golfer {
  id            String       @id
  name          String
  currentScore  Int         @default(0)
  position      Int?
  thru          Int?        @default(0)
  tournamentId  String
  tournament    Tournament  @relation(fields: [tournamentId], references: [id])
  teams         TeamGolfer[]
}

model TeamGolfer {
  id           String     @id @default(cuid())
  teamId       String
  golferId     String
  tournamentId String
  team         Team       @relation(fields: [teamId], references: [id], onDelete: Cascade)
  golfer       Golfer     @relation(fields: [golferId], references: [id])
  tournament   Tournament @relation(fields: [tournamentId], references: [id])

  @@unique([teamId, golferId, tournamentId])
}